
/**
  The macro "trmg2" holds the definition for the graphical flowchart of this model,
  with steps and links connecting steps.

  Put the following in immediate execution to get better error behavior:
    global flowchart_debug
    flowchart_debug = 1

**/
Macro "trmg2" (Args)
Body:
    // model = FlowChart( { StartNodes } , { EndNodes } , Description)
    model = FlowChart({"Stage 1"},{"Summaries"},)
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Summaries",,,)
    FlowChartNode(model,"Skimming",,,)
    FlowChartNode(model,"Transit Assignment",,,)
    FlowChartNode(model,"Convergence",,,)
    FlowChartNode(model,"Stage 1",,,)
    FlowChartNode(model,"Stage 2",,,)
    FlowChartNode(model,"Stage 3",,,)
    FlowChartNode(model,"Stage 4",,,)
    FlowChartNode(model,"Stage 5",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Skimming","Stage 4",True,,)
    FlowChartLink(model,"Transit Assignment","Summaries",True,,)
    FlowChartLink(model,"Convergence","Transit Assignment",2,,)
    FlowChartLink(model,"Convergence","Skimming",True,,1)
    FlowChartLink(model,"Stage 1","Stage 2",True,,)
    FlowChartLink(model,"Stage 2","Stage 3",True,,)
    FlowChartLink(model,"Stage 3","Skimming",True,,)
    FlowChartLink(model,"Stage 4","Stage 5",True,,)
    FlowChartLink(model,"Stage 5","Convergence",True,,)
    Return(model)
EndMacro


Macro "Network Calculations" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Network Calculations"}},
                  {"Picture","bmp\\plan_config_v3.bmp"}}
EndMacro


Macro "Accessibility" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Accessibility"}},
                  {"Picture","bmp\\planskim_v3.bmp"}}
EndMacro


Macro "Population Synthesis" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Population Synthesis"}},
                  {"Picture","bmp\\planlanduse_v3.bmp"}}
EndMacro


Macro "Resident Productions" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Resident Productions"}}}
EndMacro


Macro "NonMotorized Choice" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"NonMotorized"}}}
EndMacro


Macro "Time of Day" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Time of Day"}}}
EndMacro


Macro "Summaries" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Summaries"}}}
EndMacro


Macro "Parking Model" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Parking Model"}}}
EndMacro


Macro "Skimming" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Skimming"}}}
EndMacro


Macro "Transit Assignment" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Transit Assignment"}}}
EndMacro


Macro "NonResident Generation" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"NonResident Generation"}}}
EndMacro


Macro "Mode Choice" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Mode Choice"}}}
EndMacro


Macro "NonResident DC and MC" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"NonResident DC and MC"}}}
EndMacro


Macro "Destination Choice" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Destination Choice"}}}
EndMacro


Macro "Aggregation" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Aggregation"}}}
EndMacro


Macro "Create Assignment Matrices" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Create Assignment Matrices"}}}
EndMacro


Macro "NonHomeBased" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"NonHomeBased"}}}
EndMacro


Macro "Pre Assignment" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Pre Assignment"}}}
EndMacro


Macro "AM Assignment" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"AM Roadway Assignment"}}}
EndMacro


Macro "MD Assignment" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"MD Roadway Assignment"}}}
EndMacro


Macro "trmg2.Pins" (Args)
Body:
   // Do not modify the following line:
   Positions = null
   Return(Positions)
EndMacro


Macro "PM Assignment" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"PM Roadway Assignment"}}}
EndMacro


Macro "NT Assignment" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"NT Roadway Assignment"}}}
EndMacro


Macro "Post Assignment" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"MacroNames",{"Update Link Congested Times"}}}
EndMacro


Macro "Convergence" (Args,Result)
    Attributes = {{"Class",{"GISDK"}},
                  {"Shape","Decision"}}
Body:
    
    iter = Args.FeedbackIteration
    max_iters = Args.FeedbackIterations
    target_prmse = Args.FeedbackConvergence

    mr = CreateObject("Model.Runtime")
    periods = mr.RunCode("Get Unconverged Periods", Args)

    // periods = RunMacro("Get Unconverged Periods", Args)

    for period in periods do
        prmse = Args.(period + "_PRMSE")
        if iter = 1 then continue
        if prmse <= target_prmse or iter >= max_iters 
            then Args.converged_periods = Args.converged_periods + {period}
    end
    
    // Feedback is done when all periods have converged or hit max iters
    converged = 0
    if Args.periods.length = Args.converged_periods.length then converged = 1
    if converged = 0 then Args.FeedbackIteration = iter + 1
    Return(converged + 1)
EndMacro


Macro "Link.Convergence.Transit Assignm" (Args,Result)
    Attributes = {{"Run_Condition","Result = 2"}}
EndMacro


Macro "Link.Convergence.Skimming" (Args,Result)
    Attributes = {{"Run_Condition","Result = 1"}}
EndMacro


Macro "Stage 1" (Args,Result)
    Attributes = {{"Description","Stage 1"}}
Body:
    model = FlowChart({"Network Calculations"},{"Accessibility"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Network Calculations",,,)
    FlowChartNode(model,"Accessibility",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Network Calculations","Accessibility",True,,)
    Return(model)
EndMacro


Macro "Stage 2" (Args,Result)
    Attributes = {{"Description","Stage 2"}}
Body:
    model = FlowChart({"Population Synthesis"},{"NonMotorized Choice"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Population Synthesis",,,)
    FlowChartNode(model,"Resident Productions",,,)
    FlowChartNode(model,"NonMotorized Choice",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Population Synthesis","Resident Productions",True,,)
    FlowChartLink(model,"Resident Productions","NonMotorized Choice",True,,)
    Return(model)
EndMacro


Macro "Stage 3" (Args,Result)
    Attributes = {{"Description","Stage 3"}}
Body:
    model = FlowChart({"Aggregation"},{"NonResident Generation"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Time of Day",,,)
    FlowChartNode(model,"NonResident Generation",,,)
    FlowChartNode(model,"Aggregation",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Aggregation","Time of Day",True,,)
    FlowChartLink(model,"Time of Day","NonResident Generation",True,,)
    Return(model)
EndMacro


Macro "Stage 4" (Args,Result)
    Attributes = {{"Description","Stage 4"}}
Body:
    model = FlowChart({"Parking Model"},{"NonResident DC and MC"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Parking Model",,,)
    FlowChartNode(model,"Mode Choice",,,)
    FlowChartNode(model,"NonResident DC and MC",,,)
    FlowChartNode(model,"Destination Choice",,,)
    FlowChartNode(model,"NonHomeBased",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Parking Model","Mode Choice",True,,)
    FlowChartLink(model,"Mode Choice","Destination Choice",True,,)
    FlowChartLink(model,"Destination Choice","NonHomeBased",True,,)
    FlowChartLink(model,"NonHomeBased","NonResident DC and MC",True,,)
    Return(model)
EndMacro


Macro "Stage 5" (Args,Result)
    Attributes = {{"Description","Stage 5"}}
Body:
    // model = FlowChart( { StartNodes } , { EndNodes } , Description)
    model = FlowChart({"Create Assignment Matrices"},{"Post Assignment"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Create Assignment Matrices",,,)
    FlowChartNode(model,"Pre Assignment",,,)
    FlowChartNode(model,"AM Assignment",,,)
    FlowChartNode(model,"MD Assignment",,,)
    FlowChartNode(model,"PM Assignment",,,)
    FlowChartNode(model,"NT Assignment",,,)
    FlowChartNode(model,"Post Assignment",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Create Assignment Matrices","Pre Assignment",True,,)
    FlowChartLink(model,"Pre Assignment","AM Assignment",True,,)
    FlowChartLink(model,"Pre Assignment","MD Assignment",True,,)
    FlowChartLink(model,"Pre Assignment","PM Assignment",True,,)
    FlowChartLink(model,"Pre Assignment","NT Assignment",True,,)
    FlowChartLink(model,"AM Assignment","Post Assignment",True,,)
    FlowChartLink(model,"MD Assignment","Post Assignment",True,,)
    FlowChartLink(model,"PM Assignment","Post Assignment",True,,)
    FlowChartLink(model,"NT Assignment","Post Assignment",True,,)
    Return(model)
EndMacro

